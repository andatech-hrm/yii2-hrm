[33mcommit 6fb8f39d7b15289a6302daedde1c306995031a30[m
Author: Surakit Choodet <surakit@Surakits-MacBook-Pro.local>
Date:   Sat Dec 10 11:17:13 2016 +0700

    Add Yii2

[1mdiff --git a/.bowerrc b/.bowerrc[m
[1mnew file mode 100644[m
[1mindex 0000000..1669168[m
[1m--- /dev/null[m
[1m+++ b/.bowerrc[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "directory" : "vendor/bower"[m
[32m+[m[32m}[m
[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..6ce6155[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m# yii console commands[m
[32m+[m[32m/yii[m
[32m+[m[32m/yii_test[m
[32m+[m[32m/yii_test.bat[m
[32m+[m
[32m+[m[32m# phpstorm project files[m
[32m+[m[32m.idea[m
[32m+[m
[32m+[m[32m# netbeans project files[m
[32m+[m[32mnbproject[m
[32m+[m
[32m+[m[32m# zend studio for eclipse project files[m
[32m+[m[32m.buildpath[m
[32m+[m[32m.project[m
[32m+[m[32m.settings[m
[32m+[m
[32m+[m[32m# windows thumbnail cache[m
[32m+[m[32mThumbs.db[m
[32m+[m
[32m+[m[32m# composer vendor dir[m
[32m+[m[32m/vendor[m
[32m+[m
[32m+[m[32m# composer itself is not needed[m
[32m+[m[32mcomposer.phar[m
[32m+[m
[32m+[m[32m# Mac DS_Store Files[m
[32m+[m[32m.DS_Store[m
[32m+[m
[32m+[m[32m# phpunit itself is not needed[m
[32m+[m[32mphpunit.phar[m
[32m+[m[32m# local phpunit config[m
[32m+[m[32m/phpunit.xml[m
[32m+[m
[32m+[m[32m# vagrant runtime[m
[32m+[m[32m/.vagrant[m
[1mdiff --git a/.htaccess b/.htaccess[m
[1mnew file mode 100644[m
[1mindex 0000000..41e91d2[m
[1m--- /dev/null[m
[1m+++ b/.htaccess[m
[36m@@ -0,0 +1,41 @@[m
[32m+[m[32mOptions FollowSymLinks[m
[32m+[m[32mAddDefaultCharset utf-8[m
[32m+[m
[32m+[m[32m<IfModule mod_rewrite.c>[m
[32m+[m[32m    RewriteEngine On[m
[32m+[m[41m    [m
[32m+[m[32m    ################# Extra Folders ##############[m
[32m+[m
[32m+[m[32m     RewriteCond %{REQUEST_URI} ^/(uploads)[m
[32m+[m[32m     RewriteRule ^uploads/(.*)$ uploads/$1 [L][m
[32m+[m
[32m+[m[32m     ##############################################[m
[32m+[m
[32m+[m[32m    # the main rewrite rule for the frontend application[m
[32m+[m[32m    RewriteCond %{REQUEST_URI} !^/(backend/web|office)[m
[32m+[m[32m    RewriteRule !^frontend/web /frontend/web%{REQUEST_URI} [L][m
[32m+[m
[32m+[m[32m    # redirect to the page without a trailing slash (uncomment if necessary)[m
[32m+[m[32m    #RewriteCond %{REQUEST_URI} ^/office/$[m
[32m+[m[32m    #RewriteRule ^(office)/ /$1 [L,R=301][m
[32m+[m[32m    # the main rewrite rule for the backend application[m
[32m+[m[32m    RewriteCond %{REQUEST_URI} ^/office[m
[32m+[m[32m    RewriteRule ^office(.*) /backend/web/$1 [L][m
[32m+[m
[32m+[m[32m    # if a directory or a file of the frontend application exists, use the request directly[m
[32m+[m[32m    RewriteCond %{REQUEST_URI} ^/frontend/web[m
[32m+[m[32m    RewriteCond %{REQUEST_FILENAME} !-f[m
[32m+[m[32m    RewriteCond %{REQUEST_FILENAME} !-d[m
[32m+[m[32m    # otherwise forward the request to index.php[m
[32m+[m[32m    RewriteRule . /frontend/web/index.php [L][m
[32m+[m
[32m+[m[32m    # if a directory or a file of the backend application exists, use the request directly[m
[32m+[m[32m    RewriteCond %{REQUEST_URI} ^/backend/web[m
[32m+[m[32m    RewriteCond %{REQUEST_FILENAME} !-f[m
[32m+[m[32m    RewriteCond %{REQUEST_FILENAME} !-d[m
[32m+[m[32m    # otherwise forward the request to index.php[m
[32m+[m[32m    RewriteRule . /backend/web/index.php [L][m
[32m+[m
[32m+[m[32m    RewriteCond %{REQUEST_URI} \.(htaccess|htpasswd|svn|git)[m
[32m+[m[32m    RewriteRule \.(htaccess|htpasswd|svn|git) - [F][m
[32m+[m[32m</IfModule>[m
\ No newline at end of file[m
[1mdiff --git a/LICENSE.md b/LICENSE.md[m
[1mnew file mode 100644[m
[1mindex 0000000..e98f03d[m
[1m--- /dev/null[m
[1m+++ b/LICENSE.md[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32mThe Yii framework is free software. It is released under the terms of[m
[32m+[m[32mthe following BSD License.[m
[32m+[m
[32m+[m[32mCopyright Â© 2008 by Yii Software LLC (http://www.yiisoft.com)[m
[32m+[m[32mAll rights reserved.[m
[32m+[m
[32m+[m[32mRedistribution and use in source and binary forms, with or without[m
[32m+[m[32mmodification, are permitted provided that the following conditions[m
[32m+[m[32mare met:[m
[32m+[m
[32m+[m[32m * Redistributions of source code must retain the above copyright[m
[32m+[m[32m   notice, this list of conditions and the following disclaimer.[m
[32m+[m[32m * Redistributions in binary form must reproduce the above copyright[m
[32m+[m[32m   notice, this list of conditions and the following disclaimer in[m
[32m+[m[32m   the documentation and/or other materials provided with the[m
[32m+[m[32m   distribution.[m
[32m+[m[32m * Neither the name of Yii Software LLC nor the names of its[m
[32m+[m[32m   contributors may be used to endorse or promote products derived[m
[32m+[m[32m   from this software without specific prior written permission.[m
[32m+[m
[32m+[m[32mTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS[m
[32m+[m[32m"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT[m
[32m+[m[32mLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS[m
[32m+[m[32mFOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE[m
[32m+[m[32mCOPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,[m
[32m+[m[32mINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,[m
[32m+[m[32mBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;[m
[32m+[m[32mLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER[m
[32m+[m[32mCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT[m
[32m+[m[32mLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN[m
[32m+[m[32mANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE[m
[32m+[m[32mPOSSIBILITY OF SUCH DAMAGE.[m
[1mdiff --git a/README.md b/README.md[m
[1mindex e965047..85cd96a 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -1 +1,55 @@[m
[31m-Hello[m
[32m+[m[32mYii 2 Advanced Project Template[m
[32m+[m[32m===============================[m
[32m+[m
[32m+[m[32mYii 2 Advanced Project Template is a skeleton [Yii 2](http://www.yiiframework.com/) application best for[m
[32m+[m[32mdeveloping complex Web applications with multiple tiers.[m
[32m+[m
[32m+[m[32mThe template includes three tiers: front end, back end, and console, each of which[m
[32m+[m[32mis a separate Yii application.[m
[32m+[m
[32m+[m[32mThe template is designed to work in a team development environment. It supports[m
[32m+[m[32mdeploying the application in different environments.[m
[32m+[m
[32m+[m[32mDocumentation is at [docs/guide/README.md](docs/guide/README.md).[m
[32m+[m
[32m+[m[32m[![Latest Stable Version](https://poser.pugx.org/yiisoft/yii2-app-advanced/v/stable.png)](https://packagist.org/packages/yiisoft/yii2-app-advanced)[m
[32m+[m[32m[![Total Downloads](https://poser.pugx.org/yiisoft/yii2-app-advanced/downloads.png)](https://packagist.org/packages/yiisoft/yii2-app-advanced)[m
[32m+[m[32m[![Build Status](https://travis-ci.org/yiisoft/yii2-app-advanced.svg?branch=master)](https://travis-ci.org/yiisoft/yii2-app-advanced)[m
[32m+[m
[32m+[m[32mDIRECTORY STRUCTURE[m
[32m+[m[32m-------------------[m
[32m+[m
[32m+[m[32m```[m
[32m+[m[32mcommon[m
[32m+[m[32m    config/              contains shared configurations[m
[32m+[m[32m    mail/                contains view files for e-mails[m
[32m+[m[32m    models/              contains model classes used in both backend and frontend[m
[32m+[m[32m    tests/               contains tests for common classes[m[41m    [m
[32m+[m[32mconsole[m
[32m+[m[32m    config/              contains console configurations[m
[32m+[m[32m    controllers/         contains console controllers (commands)[m
[32m+[m[32m    migrations/          contains database migrations[m
[32m+[m[32m    models/              contains console-specific model classes[m
[32m+[m[32m    runtime/             contains files generated during runtime[m
[32m+[m[32mbackend[m
[32m+[m[32m    assets/              contains application assets such as JavaScript and CSS[m
[32m+[m[32m    config/              contains backend configurations[m
[32m+[m[32m    controllers/         contains Web controller classes[m
[32m+[m[32m    models/              contains backend-specific model classes[m
[32m+[m[32m    runtime/             contains files generated during runtime[m
[32m+[m[32m    tests/               contains tests for backend application[m[41m    [m
[32m+[m[32m    views/               contains view files for the Web application[m
[32m+[m[32m    web/                 contains the entry script and Web resources[m
[32m+[m[32mfrontend[m
[32m+[m[32m    assets/              contains application assets such as JavaScript and CSS[m
[32m+[m[32m    config/              contains frontend configurations[m
[32m+[m[32m    controllers/         contains Web controller classes[m
[32m+[m[32m    models/              contains frontend-specific model classes[m
[32m+[m[32m    runtime/             contains files generated during runtime[m
[32m+[m[32m    tests/               contains tests for frontend application[m
[32m+[m[32m    views/               contains view files for the Web application[m
[32m+[m[32m    web/                 contains the entry script and Web resources[m
[32m+[m[32m    widgets/             contains frontend widgets[m
[32m+[m[32mvendor/                  contains dependent 3rd-party packages[m
[32m+[m[32menvironments/            contains environment-based overrides[m
[32m+[m[32m```[m
[1mdiff --git a/Vagrantfile b/Vagrantfile[m
[1mnew file mode 100644[m
[1mindex 0000000..689a92c[m
[1m--- /dev/null[m
[1m+++ b/Vagrantfile[m
[36m@@ -0,0 +1,72 @@[m
[32m+[m[32mrequire 'yaml'[m
[32m+[m[32mrequire 'fileutils'[m
[32m+[m
[32m+[m[32mdomains = {[m
[32m+[m[32m  frontend: 'y2aa-frontend.dev',[m
[32m+[m[32m  backend:  'y2aa-backend.dev'[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconfig = {[m
[32m+[m[32m  local: './vagrant/config/vagrant-local.yml',[m
[32m+[m[32m  example: './vagrant/config/vagrant-local.example.yml'[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# copy config from example if local config not exists[m
[32m+[m[32mFileUtils.cp config[:example], config[:local] unless File.exist?(config[:local])[m
[32m+[m[32m# read config[m
[32m+[m[32moptions = YAML.load_file config[:local][m
[32m+[m
[32m+[m[32m# check github token[m
[32m+[m[32mif options['github_token'].nil? || options['github_token'].to_s.length != 40[m
[32m+[m[32m  puts "You must place REAL GitHub token into configuration:\n/yii2-app-advancded/vagrant/config/vagrant-local.yml"[m
[32m+[m[32m  exit[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32m# vagrant configurate[m
[32m+[m[32mVagrant.configure(2) do |config|[m
[32m+[m[32m  # select the box[m
[32m+[m[32m  config.vm.box = 'ubuntu/trusty64'[m
[32m+[m
[32m+[m[32m  # should we ask about box updates?[m
[32m+[m[32m  config.vm.box_check_update = options['box_check_update'][m
[32m+[m
[32m+[m[32m  config.vm.provider 'virtualbox' do |vb|[m
[32m+[m[32m    # machine cpus count[m
[32m+[m[32m    vb.cpus = options['cpus'][m
[32m+[m[32m    # machine memory size[m
[32m+[m[32m    vb.memory = options['memory'][m
[32m+[m[32m    # machine name (for VirtualBox UI)[m
[32m+[m[32m    vb.name = options['machine_name'][m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  # machine name (for vagrant console)[m
[32m+[m[32m  config.vm.define options['machine_name'][m
[32m+[m
[32m+[m[32m  # machine name (for guest machine console)[m
[32m+[m[32m  config.vm.hostname = options['machine_name'][m
[32m+[m
[32m+[m[32m  # network settings[m
[32m+[m[32m  config.vm.network 'private_network', ip: options['ip'][m
[32m+[m
[32m+[m[32m  # sync: folder 'yii2-app-advanced' (host machine) -> folder '/app' (guest machine)[m
[32m+[m[32m  config.vm.synced_folder './', '/app', owner: 'vagrant', group: 'vagrant'[m
[32m+[m
[32m+[m[32m  # disable folder '/vagrant' (guest machine)[m
[32m+[m[32m  config.vm.synced_folder '.', '/vagrant', disabled: true[m
[32m+[m
[32m+[m[32m  # hosts settings (host machine)[m
[32m+[m[32m  config.vm.provision :hostmanager[m
[32m+[m[32m  config.hostmanager.enabled            = true[m
[32m+[m[32m  config.hostmanager.manage_host        = true[m
[32m+[m[32m  config.hostmanager.ignore_private_ip  = false[m
[32m+[m[32m  config.hostmanager.include_offline    = true[m
[32m+[m[32m  config.hostmanager.aliases            = domains.values[m
[32m+[m
[32m+[m[32m  # provisioners[m
[32m+[m[32m  config.vm.provision 'shell', path: './vagrant/provision/once-as-root.sh', args: [options['timezone']][m
[32m+[m[32m  config.vm.provision 'shell', path: './vagrant/provision/once-as-vagrant.sh', args: [options['github_token']], privileged: false[m
[32m+[m[32m  config.vm.provision 'shell', path: './vagrant/provision/always-as-root.sh', run: 'always'[m
[32m+[m
[32m+[m[32m  # post-install message (vagrant console)[m
[32m+[m[32m  config.vm.post_up_message = "Frontend URL: http://#{domains[:frontend]}\nBackend URL: http://#{domains[:backend]}"[m
[32m+[m[32mend[m
[1mdiff --git a/backend/assets/AppAsset.php b/backend/assets/AppAsset.php[m
[1mnew file mode 100644[m
[1mindex 0000000..940c0af[m
[1m--- /dev/null[m
[1m+++ b/backend/assets/AppAsset.php[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace backend\assets;[m
[32m+[m
[32m+[m[32muse yii\web\AssetBundle;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Main backend application asset bundle.[m
[32m+[m[32m */[m
[32m+[m[32mclass AppAsset extends AssetBundle[m
[32m+[m[32m{[m
[32m+[m[32m    public $basePath = '@webroot';[m
[32m+[m[32m    public $baseUrl = '@web';[m
[32m+[m[32m    public $css = [[m
[32m+[m[32m        'css/site.css',[m
[32m+[m[32m    ];[m
[32m+[m[32m    public $js = [[m
[32m+[m[32m    ];[m
[32m+[m[32m    public $depends = [[m
[32m+[m[32m        'yii\web\YiiAsset',[m
[32m+[m[32m        'yii\bootstrap\BootstrapAsset',[m
[32m+[m[32m    ];[m
[32m+[m[32m}[m
[1mdiff --git a/backend/codeception.yml b/backend/codeception.yml[m
[1mnew file mode 100644[m
[1mindex 0000000..703b518[m
[1m--- /dev/null[m
[1m+++ b/backend/codeception.yml[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mnamespace: backend\tests[m
[32m+[m[32mactor: Tester[m
[32m+[m[32mpaths:[m
[32m+[m[32m    tests: tests[m
[32m+[m[32m    log: tests/_output[m
[32m+[m[32m    data: tests/_data[m
[32m+[m[32m    helpers: tests/_support[m
[32m+[m[32msettings:[m
[32m+[m[32m    bootstrap: _bootstrap.php[m
[32m+[m[32m    colors: true[m
[32m+[m[32m    memory_limit: 1024M[m
[32m+[m[32mmodules:[m
[32m+[m[32m    config:[m
[32m+[m[32m        Yii2:[m
[32m+[m[32m            configFile: 'config/test-local.php'[m
[1mdiff --git a/backend/config/.gitignore b/backend/config/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..42799dd[m
[1m--- /dev/null[m
[1m+++ b/backend/config/.gitignore[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32mmain-local.php[m
[32m+[m[32mparams-local.php[m
[32m+[m[32mtest-local.php[m
[1mdiff --git a/backend/config/bootstrap.php b/backend/config/bootstrap.php[m
[1mnew file mode 100644[m
[1mindex 0000000..b3d9bbc[m
[1m--- /dev/null[m
[1m+++ b/backend/config/bootstrap.php[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m<?php[m
[1mdiff --git a/backend/config/main.php b/backend/config/main.php[m
[1mnew file mode 100644[m
[1mindex 0000000..92ab822[m
[1m--- /dev/null[m
[1m+++ b/backend/config/main.php[m
[36m@@ -0,0 +1,65 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m$params = array_merge([m
[32m+[m[32m    require(__DIR__ . '/../../common/config/params.php'),[m
[32m+[m[32m    require(__DIR__ . '/../../common/config/params-local.php'),[m
[32m+[m[32m    require(__DIR__ . '/params.php'),[m
[32m+[m[32m    require(__DIR__ . '/params-local.php')[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32mreturn [[m
[32m+[m[32m    'id' => 'app-backend',[m
[32m+[m[32m    'basePath' => dirname(__DIR__),[m
[32m+[m[32m    'controllerNamespace' => 'backend\controllers',[m
[32m+[m[32m    'bootstrap' => ['log'],[m
[32m+[m[32m    'modules' => require __DIR__ . '/modules.php',[m
[32m+[m[32m    'homeUrl' => '/office',[m
[32m+[m[32m    'components' => [[m
[32m+[m[32m        'request' => [[m
[32m+[m[32m            'csrfParam' => '_csrf-backend',[m
[32m+[m[32m            'baseUrl' => '/office',[m
[32m+[m[32m        ],[m
[32m+[m[32m        'user' => [[m
[32m+[m[32m//            'identityClass' => 'common\models\User',[m
[32m+[m[32m            'identityClass' => 'anda\user\models\User',[m
[32m+[m[32m            'loginUrl' => ['/user/auth/login'],[m
[32m+[m[32m            'enableAutoLogin' => true,[m
[32m+[m[32m            'identityCookie' => ['name' => '_identity-backend', 'httpOnly' => true],[m
[32m+[m[32m        ],[m
[32m+[m[32m        'session' => [[m
[32m+[m[32m            // this is the name of the session cookie used for login on the backend[m
[32m+[m[32m            'name' => 'advanced-backend',[m
[32m+[m[32m        ],[m
[32m+[m[32m        'log' => [[m
[32m+[m[32m            'traceLevel' => YII_DEBUG ? 3 : 0,[m
[32m+[m[32m            'targets' => [[m
[32m+[m[32m                [[m
[32m+[m[32m                    'class' => 'yii\log\FileTarget',[m
[32m+[m[32m                    'levels' => ['error', 'warning'],[m
[32m+[m[32m                ],[m
[32m+[m[32m            ],[m
[32m+[m[32m        ],[m
[32m+[m[32m        'errorHandler' => [[m
[32m+[m[32m            'errorAction' => 'site/error',[m
[32m+[m[32m        ],[m
[32m+[m[32m        'urlManager' => [[m
[32m+[m[32m            'enablePrettyUrl' => true,[m
[32m+[m[32m            'showScriptName' => false,[m
[32m+[m[32m            'rules' => [[m
[32m+[m[32m            ],[m
[32m+[m[32m        ],[m
[32m+[m[32m        'as access' => [[m
[32m+[m[32m            'class' => 'mdm\admin\components\AccessControl',[m
[32m+[m[32m            'allowActions' => [[m
[32m+[m[32m                'site/*',[m
[32m+[m[32m                'admin/*',[m
[32m+[m[32m                'some-controller/some-action',[m
[32m+[m[32m                // The actions listed here will be allowed to everyone including guests.[m
[32m+[m[32m                // So, 'admin/*' should not appear here in the production, of course.[m
[32m+[m[32m                // But in the earlier stages of your development, you may probably want to[m
[32m+[m[32m                // add a lot of actions here until you finally completed setting up rbac,[m
[32m+[m[32m                // otherwise you may not even take a first step.[m
[32m+[m[32m            ][m
[32m+[m[32m        ],[m
[32m+[m[32m    ],[m
[32m+[m[32m    'params' => $params,[m
[32m+[m[32m];[m
[1mdiff --git a/backend/config/modules.php b/backend/config/modules.php[m
[1mnew file mode 100644[m
[1mindex 0000000..a6eb01f[m
[1m--- /dev/null[m
[1m+++ b/backend/config/modules.php[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m$moduleDir = realpath(__DIR__.'/modules');[m
[32m+[m[32m$modules = [];[m
[32m+[m[32mforeach (glob($moduleDir.'/*.php') as $filename) {[m
[32m+[m[32m    $path_parts = pathinfo($filename);[m
[32m+[m[32m    $modules[$path_parts['filename']] = require $filename;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mreturn $modules;[m
[32m+[m[32m?>[m
[1mdiff --git a/backend/config/modules/rbac.php b/backend/config/modules/rbac.php[m
[1mnew file mode 100644[m
[1mindex 0000000..82254f9[m
[1m--- /dev/null[m
[1m+++ b/backend/config/modules/rbac.php[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mreturn [[m
[32m+[m	[32m'class' => 'mdm\admin\Module',[m
[32m+[m	[32m'layout' => 'left-menu',[m
[32m+[m[32m];[m
\ No newline at end of file[m
[1mdiff --git a/backend/config/modules/user.php b/backend/config/modules/user.php[m
[1mnew file mode 100644[m
[1mindex 0000000..8117f48[m
[1m--- /dev/null[m
[1m+++ b/backend/config/modules/user.php[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mreturn [ //module id = 'user' only[m
[32m+[m[32m  'class' => 'anda\user\Module',[m
[32m+[m[32m  'loginBy' => 'db', //db or ldap[m
[32m+[m[32m  'userUploadDir' => '@uploads', //real path[m
[32m+[m[32m  'userUploadUrl' => '/uploads', //url path[m
[32m+[m[32m  'userUploadPath' => 'user', //path after upload directory[m
[32m+[m[32m  'admins' => ['admin', 'root'] //list username for manage users[m
[32m+[m[32m];[m
\ No newline at end of file[m
[1mdiff --git a/backend/config/params.php b/backend/config/params.php[m
[1mnew file mode 100644[m
[1mindex 0000000..7f754b9[m
[1m--- /dev/null[m
[1m+++ b/backend/config/params.php[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mreturn [[m
[32m+[m[32m    'adminEmail' => 'admin@example.com',[m
[32m+[m[32m];[m
[1mdiff --git a/backend/config/test.php b/backend/config/test.php[m
[1mnew file mode 100644[m
[1mindex 0000000..a944532[m
[1m--- /dev/null[m
[1m+++ b/backend/config/test.php[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mreturn [[m
[32m+[m[32m    'id' => 'app-backend-tests',[m
[32m+[m[32m];[m
[1mdiff --git a/backend/controllers/SiteController.php b/backend/controllers/SiteController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..9624dcc[m
[1m--- /dev/null[m
[1m+++ b/backend/controllers/SiteController.php[m
[36m@@ -0,0 +1,98 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mnamespace backend\controllers;[m
[32m+[m
[32m+[m[32muse Yii;[m
[32m+[m[32muse yii\web\Controller;[m
[32m+[m[32muse yii\filters\VerbFilter;[m
[32m+[m[32muse yii\filters\AccessControl;[m
[32m+[m[32muse common\models\LoginForm;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Site controller[m
[32m+[m[32m */[m
[32m+[m[32mclass SiteController extends Controller[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @inheritdoc[m
[32m+[m[32m     */[m
[32m+[m[32m    public function behaviors()[m
[32m+[m[32m    {[m
[32m+[m[32m        return [[m
[32m+[m[32m            'access' => [[m
[32m+[m[32m                'class' => AccessControl::className(),[m
[32m+[m[32m                'rules' => [[m
[32m+[m[32m                    [[m
[32m+[m[32m                        'actions' => ['login', 'error'],[m
[32m+[m[32m                        'allow' => true,[m
[32m+[m[32m                    ],[m
[32m+[m[32m                    [[m
[32m+[m[32m                        'actions' => ['logout', 'index'],[m
[32m+[m[32m                        'allow' => true,[m
[32m+[m[32m                        'roles' => ['@'],[m
[32m+[m[32m                    ],[m
[32m+[m[32m                ],[m
[32m+[m[32m            ],[m
[32m+[m[32m            'verbs' => [[m
[32m+[m[32m                'class' => VerbFilter::className(),[m
[32m+[m[32m                'actions' => [[m
[32m+[m[32m                    'logout' => ['post'],[m
[32m+[m[32m                ],[m
[32m+[m[32m            ],[m
[32m+[m[32m        ];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @inheritdoc[m
[32m+[m[32m     */[m
[32m+[m[32m    public function actions()[m
[32m+[m[32m    {[m
[32m+[m[32m        return [[m
[32m+[m[32m            'error' => [[m
[32m+[m[32m                'class' => 'yii\web\ErrorAction',[m
[32m+[m[32m            ],[m
[32m+[m[32m        ];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Displays homepage.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return string[m
[32m+[m[32m     */[m
[32m+[m[32m    public function actionIndex()[m
[32m+[m[32m    {[m
[32m+[m[32m        return $this->render('index');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Login action.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return string[m
[32m+[m[32m     */[m
[32m+[m[32m    public function actionLogin()[m
[32m+[m[32m    {[m
[32m+[m[32m        if (!Yii::$app->user->isGuest) {[m
[32m+[m[32m            return $this->goHome();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $model = new LoginForm();[m
[32m+[m[32m        if ($model->load(Yii::$app->request->post()) && $model->login()) {[m
[32m+[m[32m            return $this->goBack();[m
[32m+[m[32m        } else {[m
[32m+[m[32m            return $this->render('login', [[m
[32m+[m[32m                'model' => $model,[m
[32m+[m[32m            ]);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Logout action.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return string[m
[32m+[m[32m     */[m
[32m+[m[32m    public function actionLogout()[m
[32m+[m[32m    {[m
[32m+[m[32m        Yii::$app->user->logout();[m
[32m+[m
[32m+[m[32m        return $this->goHome();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/backend/models/.gitkeep b/backend/models/.gitkeep[m
[1mnew file mode 100644[m
[1mindex 0000000..72e8ffc[m
[1m--- /dev/null[m
[1m+++ b/backend/models/.gitkeep[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m*[m
[1mdiff --git a/backend/runtime/.gitignore b/backend/runtime/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..c96a04f[m
[1m--- /dev/null[m
[1m+++ b/backend/runtime/.gitignore[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m*[m
[32m+[m[32m!.gitignore[m
\ No newline at end of file[m
[1mdiff --git a/backend/tests/_bootstrap.php b/backend/tests/_bootstrap.php[m
[1mnew file mode 100644[m
[1mindex 0000000..83a1f26[m
[1m--- /dev/null[m
[1m+++ b/backend/tests/_bootstrap.php[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('YII_DEBUG') or define('YII_DEBUG', true);[m
[32m+[m[32mdefined('YII_ENV') or define('YII_ENV', 'test');[m
[32m+[m[32mdefined('YII_APP_BASE_PATH') or define('YII_APP_BASE_PATH', __DIR__.'/../../');[m
[32m+[m
[32m+[m[32mrequire_once(YII_APP_BASE_PATH . '/vendor/autoload.php');[m
[32m+[m[32mrequire_once(YII_APP_BASE_PATH . '/vendor/yiisoft/yii2/Yii.php');[m
[32m+[m[32mrequire_once(YII_APP_BASE_PATH . '/common/config/bootstrap.php');[m
[32m+[m[32mrequire_once(__DIR__ . '/../config/bootstrap.php');[m
[1mdiff --git a/backend/tests/_data/.gitignore b/backend/tests/_data/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/backend/tests/_data/login_data.php b/backend/tests/_data/login_data.php[m
[1mnew file mode 100644[m
[1mindex 0000000..32aef6e[m
[1m--- /dev/null[m
[1m+++ b/backend/tests/_data/login_data.php[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mreturn [[m
[32m+[m[32m    [[m
[32m+[m[32m        'username' => 'erau',[m
[32m+[m[32m        'auth_key' => 'tUu1qHcde0diwUol3xeI-18MuHkkprQI',[m
[32m+[m[32m        // password_0[m
[32m+[m[32m        'password_hash' => '$2y$13$nJ1WDlBaGcbCdbNC5.5l4.sgy.OMEKCqtDQOdQ2OWpgiKRWYyzzne',[m
[32m+[m[32m        'password_reset_token' => 'RkD_Jw0_8HEedzLk7MM-ZKEFfYR7VbMr_1392559490',[m
[32m+[m[32m        'created_at' => '1392559490',[m
[32m+[m[32m        'updated_at' => '1392559490',[m
[32m+[m[32m        'email' => 'sfriesen@jenkins.info',[m
[32m+[m[32m    ],[m
[32m+[m[32m];[m
[1mdiff --git a/backend/tests/_output/.gitignore b/backend/tests/_output/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..d6b7ef3[m
[1m--- /dev/null[m
[1m+++ b/backend/tests/_output/.gitignore[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m*[m
[32m+[m[32m!.gitignore[m
[1mdiff --git a/backend/tests/_support/.gitignore b/backend/tests/_support/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..36e264c[m
[1m--- /dev/null[m
[1m+++ b/backend/tests/_support/.gitignore[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m_generated[m
[1mdiff --git a/backend/tests/_support/FunctionalTester.php b/backend/tests/_support/FunctionalTester.php[m
[1mnew file mode 100644[m
[1mindex 0000000..80a79ed[m
[1m--- /dev/null[m
[1m+++ b/backend/tests/_support/FunctionalTester.php[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mnamespace backend\tests;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Inherited Methods[m
[32m+[m[32m * @method void wantToTest($text)[m
[32m+[m[32m * @method void wantTo($text)[m
[32m+[m[32m * @method void execute($callable)[m
[32m+[m[32m * @method void expectTo($prediction)[m
[32m+[m[32m * @method void expect($prediction)[m
[32m+[m[32m * @method void amGoingTo($argumentation)[m
[32m+[m[32m * @method void am($role)[m
[32m+[m[32m * @method void lookForwardTo($achieveValue)[m
[32m+[m[32m * @method void comment($description)[m
[32m+[m[32m * @method \Codeception\Lib\Friend haveFriend($name, $actorClass = NULL)[m
[32m+[m[32m *[m
[32m+[m[32m * @SuppressWarnings(PHPMD)[m
[32m+[m[32m */[m
[32m+[m[32mclass FunctionalTester extends \Codeception\Actor[m
[32m+[m[32m{[m
[32m+[m[32m    use _generated\FunctionalTesterActions;[m
[32m+[m[32m   /**[m
[32m+[m[32m    * Define custom actions here[m
[32m+[m[32m    */[m
[32m+[m[32m}[m
[1mdiff --git a/backend/tests/_support/UnitTester.php b/backend/tests/_support/UnitTester.php[m
[1mnew file mode 100644[m
[1mindex 0000000..88db6ae[m
[1m--- /dev/null[m
[1m+++ b/backend/tests/_support/UnitTester.php[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mnamespace backend\tests;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Inherited Methods[m
[32m+[m[32m * @method void wantToTest($text)[m
[32m+[m[32m * @method void wantTo($text)[m
[32m+[m[32m * @method void execute($callable)[m
[32m+[m[32m * @method void expectTo($prediction)[m
[32m+[m[32m * @method void expect($prediction)[m
[32m+[m[32m * @method void amGoingTo($argumentation)[m
[32m+[m[32m * @method void am($role)[m
[32m+[m[32m * @method void lookForwardTo($achieveValue)[m
[32m+[m[32m * @method void comment($description)[m
[32m+[m[32m * @method \Codeception\Lib\Friend haveFriend($name, $actorClass = NULL)[m
[32m+[m[32m *[m
[32m+[m[32m * @SuppressWarnings(PHPMD)[m
[32m+[m[32m */[m
[32m+[m[32mclass UnitTester extends \Codeception\Actor[m
[32m+[m[32m{[m
[32m+[m[32m    use _generated\UnitTesterActions;[m
[32m+[m[32m   /**[m
[32m+[m[32m    * Define custom actions here[m
[32m+[m[32m    */[m
[32m+[m[32m}[m
[1mdiff --git a/backend/tests/functional.suite.yml b/backend/tests/functional.suite.yml[m
[1mnew file mode 100644[m
[1mindex 0000000..acd31d8[m
[1m--- /dev/null[m
[1m+++ b/backend/tests/functional.suite.yml[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32mclass_name: FunctionalTester[m
[32m+[m[32mmodules:[m
[32m+[m[32m    enabled:[m
[32m+[m[32m        - Yii2[m
[1mdiff --git a/backend/tests/functional/LoginCest.php b/backend/tests/functional/LoginCest.php[m
[1mnew file mode 100644[m
[1mindex 0000000..604551a[m
[1m--- /dev/null[m
[1m+++ b/backend/tests/functional/LoginCest.php[m
[36m@@ -0,0 +1,36 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace backend\tests\functional;[m
[32m+[m
[32m+[m[32muse \backend\tests\FunctionalTester;[m
[32m+[m[32muse common\fixtures\User as UserFixture;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Class LoginCest[m
[32m+[m[32m */[m
[32m+[m[32mclass LoginCest[m
[32m+[m[32m{[m
[32m+[m[32m    public function _before(FunctionalTester $I)[m
[32m+[m[32m    {[m
[32m+[m[32m        $I->haveFixtures([[m
[32m+[m[32m            'user' => [[m
[32m+[m[32m                'class' => UserFixture::className(),[m
[32m+[m[32m                'dataFile' => codecept_data_dir() . 'login_data.php'[m
[32m+[m[32m            ][m
[32m+[m[32m        ]);[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @param FunctionalTester $I[m
[32m+[m[32m     */[m
[32m+[m[32m    public function loginUser(FunctionalTester $I)[m
[32m+[m[32m    {[m
[32m+[m[32m        $I->amOnPage('/site/login');[m
[32m+[m[32m        $I->fillField('Username', 'erau');[m
[32m+[m[32m        $I->fillField('Password', 'password_0');[m
[32m+[m[32m        $I->click('login-button');[m
[32m+[m
[32m+[m[32m        $I->see('Logout (erau)', 'form button[type=submit]');[m
[32m+[m[32m        $I->dontSeeLink('Login');[m
[32m+[m[32m        $I->dontSeeLink('Signup');[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/backend/tests/functional/_bootstrap.php b/backend/tests/functional/_bootstrap.php[m
[1mnew file mode 100644[m
[1mindex 0000000..b3d9bbc[m
[1m--- /dev/null[m
[1m+++ b/backend/tests/functional/_bootstrap.php[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m<?php[m
[1mdiff --git a/backend/tests/unit.suite.yml b/backend/tests/unit.suite.yml[m
[1mnew file mode 100644[m
[1mindex 0000000..1ba1eb4[m
[1m--- /dev/null[m
[1m+++ b/backend/tests/unit.suite.yml[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mclass_name: UnitTester[m
[1mdiff --git a/backend/tests/unit/_bootstrap.php b/backend/tests/unit/_bootstrap.php[m
[1mnew file mode 100644[m
[1mindex 0000000..7dfa7c3[m
[1m--- /dev/null[m
[1m+++ b/backend/tests/unit/_bootstrap.php[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m// Here you can initialize variables that will for your tests[m
[1mdiff --git a/backend/views/layouts/main.php b/backend/views/layouts/main.php[m
[1mnew file mode 100644[m
[1mindex 0000000..2807583[m
[1m--- /dev/null[m
[1m+++ b/backend/views/layouts/main.php[m
[36m@@ -0,0 +1,79 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32m/* @var $this \yii\web\View */[m
[32m+[m[32m/* @var $content string */[m
[32m+[m
[32m+[m[32muse backend\assets\AppAsset;[m
[32m+[m[32muse yii\helpers\Html;[m
[32m+[m[32muse yii\bootstrap\Nav;[m
[32m+[m[32muse yii\bootstrap\NavBar;[m
[32m+[m[32muse yii\widgets\Breadcrumbs;[m
[32m+[m[32muse common\widgets\Alert;[m
[32m+[m
[32m+[m[32mAppAsset::register($this);[m
[32m+[m[32m?>[m
[32m+[m[32m<?php $this->beginPage() ?>[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html lang="<?= Yii::$app->language ?>">[m
[32m+[m[32m<head>[m
[32m+[m[32m    <meta charset="<?= Yii::$app->charset ?>">[m
[32m+[m[32m    <meta name="viewport" content="width=device-width, initial-scale=1">[m
[32m+[m[32m    <?= Html::csrfMetaTags() ?>[m
[32m+[m[32m    <title><?= Html::encode($this->title) ?></title>[m
[32m+[m[32m    <?php $this->head() ?>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m[32m<?php $this->beginBody() ?>[m
[32m+[m
[32m+[m[32m<div class="wrap">[m
[32m+[m[32m    <?php[m
[32m+[m[32m    NavBar::begin([[m
[32m+[m[32m        'brandLabel' => 'My Company',[m
[32m+[m[32m        'brandUrl' => Yii::$app->homeUrl,[m
[32m+[m[32m        'options' => [[m
[32m+[m[32m            'class' => 'navbar-inverse navbar-fixed-top',[m
[32m+[m[32m        ],[m
[32m+[m[32m    ]);[m
[32m+[m[32m    $menuItems = [[m
[32m+[m[32m        ['label' => 'Home', 'url' => ['/site/index']],[m
[32m+[m[32m    ];[m
[32m+[m[32m    if (Yii::$app->user->isGuest) {[m
[32m+[m[32m        $menuItems[] = ['label' => 'Login', 'url' => ['/site/login']];[m
[32m+[m[32m    } else {[m
[32m+[m[32m        $menuItems[] = '<li>'[m
[32m+[m[32m            . Html::beginForm(['/site/logout'], 'post')[m
[32m+[m[32m            . Html::submitButton([m
[32m+[m[32m                'Logout (' . Yii::$app->user->identity->username . ')',[m
[32m+[m[32m                ['class' => 'btn btn-link logout'][m
[32m+[m[32m            )[m
[32m+[m[32m            . Html::endForm()[m
[32m+[m[32m            . '</li>';[m
[32m+[m[32m    }[m
[32m+[m[32m    echo Nav::widget([[m
[32m+[m[32m        'options' => ['class' => 'navbar-nav navbar-right'],[m
[32m+[m[32m        'items' => $menuItems,[m
[32m+[m[32m    ]);[m
[32m+[m[32m    NavBar::end();[m
[32m+[m[32m    ?>[m
[32m+[m
[32m+[m[32m    <div class="container">[m
[32m+[m[32m        <?= Breadcrumbs::widget([[m
[32m+[m[32m            'links' => isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [],[m
[32m+[m[32m        ]) ?>[m
[32m+[m[32m        <?= Alert::widget() ?>[m
[32m+[m[32m        <?= $content ?>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
[32m+[m
[32m+[m[32m<footer class="footer">[m
[32m+[m[32m    <div class="container">[m
[32m+[m[32m        <p class="pull-left">&copy; My Company <?= date('Y') ?></p>[m
[32m+[m
[32m+[m[32m        <p class="pull-right"><?= Yii::powered() ?></p>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</footer>[m
[32m+[m
[32m+[m[32m<?php $this->endBody() ?>[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
[32m+[m[32m<?php $this->endPage() ?>[m
[1mdiff --git a/backend/views/site/error.php b/backend/views/site/error.php[m
[1mnew file mode 100644[m
[1mindex 0000000..0ba2574[m
[1m--- /dev/null[m
[1m+++ b/backend/views/site/error.php[m
[36m@@ -0,0 +1,27 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32m/* @var $this yii\web\View */[m
[32m+[m[32m/* @var $name string */[m
[32m+[m[32m/* @var $message string */[m
[32m+[m[32m/* @var $exception Exception */[m
[32m+[m
[32m+[m[32muse yii\helpers\Html;[m
[32m+[m
[32m+[m[32m$this->title = $name;[m
[32m+[m[32m?>[m
[32m+[m[32m<div class="site-error">[m
[32m+[m
[32m+[m[32m    <h1><?= Html::encode($this->title) ?></h1>[m
[32m+[m
[32m+[m[32m    <div class="alert alert-danger">[m
[32m+[m[32m        <?= nl2br(Html::encode($message)) ?>[m
[32m+[m[32m    </div>[m
[32m+[m
[32m+[m[32m    <p>[m
[32m+[m[32m        The above error occurred while the Web server was processing your request.[m
[32m+[m[32m    </p>[m
[32m+[m[32m    <p>[m
[32m+[m[32m        Please contact us if you think this is a server error. Thank you.[m
[32m+[m[32m    </p>[m
[32m+[m
[32m+[m[32m</div>[m
[1mdiff --git a/backend/views/site/index.php b/backend/views/site/index.php[m
[1mnew file mode 100644[m
[1mindex 0000000..f780610[m
[1m--- /dev/null[m
[1m+++ b/backend/views/site/index.php[m
[36m@@ -0,0 +1,53 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32m/* @var $this yii\web\View */[m
[32m+[m
[32m+[m[32m$this->title = 'My Yii Application';[m
[32m+[m[32m?>[m
[32m+[m[32m<div class="site-index">[m
[32m+[m
[32m+[m[32m    <div class="jumbotron">[m
[32m+[m[32m        <h1>Congratulations!</h1>[m
[32m+[m
[32m+[m[32m        <p class="lead">You have successfully created your Yii-powered application.</p>[m
[32m+[m
[32m+[m[32m        <p><a class="btn btn-lg btn-success" href="http://www.yiiframework.com">Get started with Yii</a></p>[m
[32m+[m[32m    </div>[m
[32m+[m
[32m+[m[32m    <div class="body-content">[m
[32m+[m
[32m+[m[32m        <div class="row">[m
[32m+[m[32m            <div class="col-lg-4">[m
[32m+[m[32m                <h2>Heading</h2>[m
[32m+[m
[32m+[m[32m                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et[m
[32m+[m[32m                    dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip[m
[32m+[m[32m                    ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu[m
[32m+[m[32m                    fugiat nulla pariatur.</p>[m
[32m+[m
[32m+[m[32m                <p><a class="btn btn-default" href="http://www.yiiframework.com/doc/">Yii Documentation &raquo;</a></p>[m
[32m+[m[32m            </div>[m
[32m+[m[32m            <div class="col-lg-4">[m
[32m+[m[32m                <h2>Heading</h2>[m
[32m+[m
[32m+[m[32m                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et[m
[32m+[m[32m                    dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip[m
[32m+[m[32m                    ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu[m
[32m+[m[32m                    fugiat nulla pariatur.</p>[m
[32m+[m
[32m+[m[32m                <p><a class="btn btn-default" href="http://www.yiiframework.com/forum/">Yii Forum &raquo;</a></p>[m
[32m+[m[32m            </div>[m
[32m+[m[32m            <div class="col-lg-4">[m
[32m+[m[32m                <h2>Heading</h2>[m
[32m+[m
[32m+[m[32m                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et[m
[32m+[m[32m                    dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip[m
[32m+[m[32m                    ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu[m
[32m+[m[32m                    fugiat nulla pariatur.</p>[m
[32m+[m
[32m+[m[32m                <p><a class="btn btn-default" href="http://www.yiiframework.com/extensions/">Yii Extensions &raquo;</a></p>[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </div>[m
[32m+[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
[1mdiff --git a/backend/views/site/login.php b/backend/views/site/login.php[m
[1mnew file mode 100644[m
[1mindex 0000000..20f3f78[m
[1m--- /dev/null[m
[1m+++ b/backend/views/site/login.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32m/* @var $this yii\web\View */[m
[32m+[m[32m/* @var $form yii\bootstrap\ActiveForm */[m
[32m+[m[32m/* @var $model \common\models\LoginForm */[m
[32m+[m
[32m+[m[32muse yii\helpers\Html;[m
[32m+[m[32muse yii\bootstrap\ActiveForm;[m
[32m+[m
[32m+[m[32m$this->title = 'Login';[m
[32m+[m[32m$this->params['breadcrumbs'][] = $this->title;[m
[32m+[m[32m?>[m
[32m+[m[32m<div class="site-login">[m
[32m+[m[32m    <h1><?= Html::encode($this->title) ?></h1>[m
[32m+[m
[32m+[m[32m    <p>Please fill out the following fields to login:</p>[m
[32m+[m
[32m+[m[32m    <div class="row">[m
[32m+[m[32m        <div class="col-lg-5">[m
[32m+[m[32m            <?php $form = ActiveForm::begin(['id' => 'login-form']); ?>[m
[32m+[m
[32m+[m[32m                <?= $form->field($model, 'username')->textInput(['autofocus' => true]) ?>[m
[32m+[m
[32m+[m[32m                <?= $form->field($model, 'password')->passwordInput() ?>[m
[32m+[m
[32m+[m[32m                <?= $form->field($model, 'rememberMe')->checkbox() ?>[m
[32m+[m
[32m+[m[32m                <div class="form-group">[m
[32m+[m[32m                    <?= Html::submitButton('Login', ['class' => 'btn btn-primary', 'name' => 'login-button']) ?>[m
[32m+[m[32m                </div>[m
[32m+[m
[32m+[m[32m            <?php ActiveForm::end(); ?>[m
[32m+[m[32m        </div>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
[1mdiff --git a/backend/web/.gitignore b/backend/web/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..25c74e6[m
[1m--- /dev/null[m
[1m+++ b/backend/web/.gitignore[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m/index.php[m
[32m+[m[32m/index-test.php[m
[1mdiff --git a/backend/web/assets/.gitignore b/backend/web/assets/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..d6b7ef3[m
[1m--- /dev/null[m
[1m+++ b/backend/web/assets/.gitignore[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m*[m
[32m+[m[32m!.gitignore[m
[1mdiff --git a/backend/web/css/site.css b/backend/web/css/site.css[m
[1mnew file mode 100644[m
[1mindex 0000000..2f085b3[m
[1m--- /dev/null[m
[1m+++ b/backend/web/css/site.css[m
[36m@@ -0,0 +1,120 @@[m
[32m+[m[32mhtml,[m
[32m+[m[32mbody {[m
[32m+[m[32m    height: 100%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.wrap {[m
[32m+[m[32m    min-height: 100%;[m
[32m+[m[32m    height: auto;[m
[32m+[m[32m    margin: 0 auto -60px;[m
[32m+[m[32m    padding: 0 0 60px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.wrap > .container {[m
[32m+[m[32m    padding: 70px 15px 20px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.footer {[m
[32m+[m[32m    height: 60px;[m
[32m+[m[32m    background-color: #f5f5f5;[m
[32m+[m[32m    border-top: 1px solid #ddd;[m
[32m+[m[32m    padding-top: 20px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.jumbotron {[m
[32m+[m[32m    text-align: center;[m
[32m+[m[32m    background-color: transparent;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.jumbotron .btn {[m
[32m+[m[32m    font-size: 21px;[m
[32m+[m[32m    padding: 14px 24px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.not-set {[m
[32m+[m[32m    color: #c55;[m
[32m+[m[32m    font-style: italic;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* add sorting icons to gridview sort links */[m
[32m+[m[32ma.asc:after, a.desc:after {[m
[32m+[m[32m    position: relative;[m
[32m+[m[32m    top: 1px;[m
[32m+[m[32m    display: inline-block;[m
[32m+[m[32m    font-family: 'Glyphicons Halflings';[m
[32m+[m[32m    font-style: normal;[m
[32m+[m[32m    font-weight: normal;[m
[32m+[m[32m    line-height: 1;[m
[32m+[m[32m    padding-left: 5px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32ma.asc:after {[m
[32m+[m[32m    content: /*"\e113"*/ "\e151";[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32ma.desc:after {[m
[32m+[m[32m    content: /*"\e114"*/ "\e152";[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.sort-numerical a.asc:after {[m
[32m+[m[32m    content: "\e153";[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.sort-numerical a.desc:after {[m
[32m+[m[32m    content: "\e154";[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.sort-ordinal a.asc:after {[m
[32m+[m[32m    content: "\e155";[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.sort-ordinal a.desc:after {[m
[32m+[m[32m    content: "\e156";[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.grid-view td {[m
[32m+[m[32m    white-space: nowrap;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.grid-view .filters input,[m
[32m+[m[32m.grid-view .filters select {[m
[32m+[m[32m    min-width: 50px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.hint-block {[m
[32m+[m[32m    display: block;[m
[32m+[m[32m    margin-top: 5px;[m
[32m+[m[32m    color: #999;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.error-summary {[m
[32m+[m[32m    color: #a94442;[m
[32m+[m[32m    background: #fdf7f7;[m
[32m+[m[32m    border-left: 3px solid #eed3d7;[m
[32m+[m[32m    padding: 10px 20px;[m
[32m+[m[32m    margin: 0 0 15px 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* align the logout "link" (button in form) of the navbar */[m
[32m+[m[32m.nav li > form > button.logout {[m
[32m+[m[32m    padding: 15px;[m
[32m+[m[32m    border: none;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m@media(max-width:767px) {[m
[32m+[m[32m    .nav li > form > button.logout {[m
[32m+[m[32m        display:block;[m
[32m+[m[32m        text-align: left;[m
[32m+[m[32m        width: 100%;[m
[32m+[m[32m        padding: 10px 15px;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.nav > li > form > button.logout:focus,[m
[32m+[m[32m.nav > li > form > button.logout:hover {[m
[32m+[m[32m    text-decoration: none;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.nav > li > form > button.logout:focus {[m
[32m+[m[32m    outline: none;[m
[32m+[m[32m}[m
[1mdiff --git a/backend/web/favicon.ico b/backend/web/favicon.ico[m
[1mnew file mode 100644[m
[1mindex 0000000..580ed73[m
Binary files /dev/null and b/backend/web/favicon.ico differ
[1mdiff --git a/backend/web/robots.txt b/backend/web/robots.txt[m
[1mnew file mode 100644[m
[1mindex 0000000..1f53798[m
[1m--- /dev/null[m
[1m+++ b/backend/web/robots.txt[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32mUser-agent: *[m
[32m+[m[32mDisallow: /[m
[1mdiff --git a/codeception.yml b/codeception.yml[m
[1mnew file mode 100644[m
[1mindex 0000000..af20104[m
[1m--- /dev/null[m
[1m+++ b/codeception.yml[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m# global codeception file to run tests from all apps[m
[32m+[m[32minclude:[m
[32m+[m[32m    - common[m
[32m+[m[32m    - frontend[m
[32m+[m[32m    - backend[m
[32m+[m[32mpaths:[m
[32m+[m[32m    log: console/runtime/logs[m
[32m+[m[32msettings:[m
[32m+[m[32m    colors: true[m
\ No newline at end of file[m
[1mdiff --git a/common/codeception.yml b/common/codeception.yml[m
[1mnew file mode 100644[m
[1mindex 0000000..de5d76a[m
[1m--- /dev/null[m
[1m+++ b/common/codeception.yml[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mnamespace: common\tests[m
[32m+[m[32mactor: Tester[m
[32m+[m[32mpaths:[m
[32m+[m[32m    tests: tests[m
[32m+[m[32m    log: tests/_output[m
[32m+[m[32m    data: tests/_data[m
[32m+[m[32m    helpers: tests/_support[m
[32m+[m[32msettings:[m
[32m+[m[32m    bootstrap: _bootstrap.php[m
[32m+[m[32m    colors: true[m
[32m+[m[32m    memory_limit: 1024M[m
[32m+[m[32mmodules:[m
[32m+[m[32m    config:[m
[32m+[m[32m        Yii2:[m
[32m+[m[32m            configFile: 'config/test-local.php'[m
[1mdiff --git a/common/config/.gitignore b/common/config/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..42799dd[m
[1m--- /dev/null[m
[1m+++ b/common/config/.gitignore[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32mmain-local.php[m
[32m+[m[32mparams-local.php[m
[32m+[m[32mtest-local.php[m
[1mdiff --git a/common/config/bootstrap.php b/common/config/bootstrap.php[m
[1mnew file mode 100644[m
[1mindex 0000000..93d0185[m
[1m--- /dev/null[m
[1m+++ b/common/config/bootstrap.php[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mYii::setAlias('@common', dirname(__DIR__));[m
[32m+[m[32mYii::setAlias('@frontend', dirname(dirname(__DIR__)) . '/frontend');[m
[32m+[m[32mYii::setAlias('@backend', dirname(dirname(__DIR__)) . '/backend');[m
[32m+[m[32mYii::setAlias('@console', dirname(dirname(__DIR__)) . '/console');[m
[1mdiff --git a/common/config/main.php b/common/config/main.php[m
[1mnew file mode 100644[m
[1mindex 0000000..df0acda[m
[1m--- /dev/null[m
[1m+++ b/common/config/main.php[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mreturn [[m
[32m+[m[32m    'vendorPath' => dirname(dirname(__DIR__)) . '/vendor',[m
[32m+[m[32m    'components' => [[m
[32m+[m[32m        'cache' => [[m
[32m+[m[32m            'class' => 'yii\caching\FileCache',[m
[32m+[m[32m        ],[m
[32m+[m[32m        'authManager' => [[m
[32m+[m[32m            'class' => 'yii\rbac\DbManager', // or use 'yii\rbac\PhpManager'[m
[32m+[m[32m        ],[m
[32m+[m[32m    ],[m
[32m+[m[32m    'aliases' => [[m
[32m+[m[32m        '@themes' => dirname(dirname(__DIR__)) . '/themes',[m
[32m+[m[32m        '@uploads' => dirname(dirname(__DIR__)) . '/uploads',[m
[32m+[m[32m    ],[m
[32m+[m[32m];[m
[1mdiff --git a/common/config/params.php b/common/config/params.php[m
[1mnew file mode 100644[m
[1mindex 0000000..4ec9ba6[m
[1m--- /dev/null[m
[1m+++ b/common/config/params.php[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mreturn [[m
[32m+[m[32m    'adminEmail' => 'admin@example.com',[m
[32m+[m[32m    'supportEmail' => 'support@example.com',[m
[32m+[m[32m    'user.passwordResetTokenExpire' => 3600,[m
[32m+[m[32m];[m
[1mdiff --git a/common/config/test.php b/common/config/test.php[m
[1mnew file mode 100644[m
[1mindex 0000000..c952c41[m
[1m--- /dev/null[m
[1m+++ b/common/config/test.php[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mreturn [[m
[32m+[m[32m    'id' => 'app-common-tests',[m
[32m+[m[32m    'basePath' => dirname(__DIR__),[m
[32m+[m[32m    'components' => [[m
[32m+[m[32m        'user' => [[m
[32m+[m[32m            'class' => 'yii\web\User',[m
[32m+[m[32m            'identityClass' => 'common\models\User',[m
[32m+[m[32m        ],[m
[32m+[m[32m    ],[m
[32m+[m[32m];[m
[1mdiff --git a/common/fixtures/User.php b/common/fixtures/User.php[m
[1mnew file mode 100644[m
[1mindex 0000000..d4b0f36[m
[1m--- /dev/null[m
[1m+++ b/common/fixtures/User.php[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mnamespace common\fixtures;[m
[32m+[m
[32m+[m[32muse yii\test\ActiveFixture;[m
[32m+[m
[32m+[m[32mclass User extends ActiveFixture[m
[32m+[m[32m{[m
[32m+[m[32m    public $modelClass = 'common\models\User';[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/common/mail/layouts/html.php b/common/mail/layouts/html.php[m
[1mnew file mode 100644[m
[1mindex 0000000..bddbc61[m
[1m--- /dev/null[m
[1m+++ b/common/mail/layouts/html.php[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32m<?php[m
[32m+[m[32muse yii\helpers\Html;[m
[32m+[m
[32m+[m[32m/* @var $this \yii\web\View view component instance */[m
[32m+[m[32m/* @var $message \yii\mail\MessageInterface the message being composed */[m
[32m+[m[32m/* @var $content string main view render result */[m
[32m+[m[32m?>[m
[32m+[m[32m<?php $this->beginPage() ?>[m
[32m+[m[32m<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">[m
[32m+[m[32m<html xmlns="http://www.w3.org/1999/xhtml">[m
[32m+[m[32m<head>[m
[32m+[m[32m    <meta http-equiv="Content-Type" content="text/html; charset=<?= Yii::$app->charset ?>" />[m
[32m+[m[32m    <title><?= Html::encode($this->title) ?></title>[m
[32m+[m[32m    <?php $this->head() ?>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m[32m    <?php $this->beginBody() ?>[m
[32m+[m[32m    <?= $content ?>[m
[32m+[m[32m    <?php $this->endBody() ?>[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
[32m+[m[32m<?php $this->endPage() ?>[m
[1mdiff --git a/common/mail/layouts/text.php b/common/mail/layouts/text.php[m
[1mnew file mode 100644[m
[1mindex 0000000..aab1d5d[m
[1m--- /dev/null[m
[1m+++ b/common/mail/layouts/text.php[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32muse yii\helpers\Html;[m
[32m+[m
[32m+[m[32m/** @var \yii\web\View $this view component instance */[m
[32m+[m[32m/** @var \yii\mail\MessageInterface $message the message being composed */[m
[32m+[m[32m/** @var string $content main view render result */[m
[32m+[m[32m?>[m
[32m+[m
[32m+[m[32m<?php $this->beginPage() ?>[m
[32m+[m[32m<?php $this->beginBody() ?>[m
[32m+[m[32m<?= $content ?>[m
[32m+[m[32m<?php $this->endBody() ?>[m
[32m+[m[32m<?php $this->endPage() ?>[m
[1mdiff --git a/common/mail/passwordResetToken-html.php b/common/mail/passwordResetToken-html.php[m
[1mnew file mode 100644[m
[1mindex 0000000..f3daf49[m
[1m--- /dev/null[m
[1m+++ b/common/mail/passwordResetToken-html.php[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32m<?php[m
[32m+[m[32muse yii\helpers\Html;[m
[32m+[m
[32m+[m[32m/* @var $this yii\web\View */[m
[32m+[m[32m/* @var $user common\models\User */[m
[32m+[m
[32m+[m[32m$resetLink = Yii::$app->urlManager->createAbsoluteUrl(['site/reset-password', 'token' => $user->password_reset_token]);[m
[32m+[m[32m?>[m
[32m+[m[32m<div class="password-reset">[m
[32m+[m[32m    <p>Hello <?= Html::encode($user->username) ?>,</p>[m
[32m+[m
[32m+[m[32m    <p>Follow the link below to reset your password:</p>[m
[32m+[m
[32m+[m[32m    <p><?= Html::a(Html::encode($resetLink), $resetLink) ?></p>[m
[32m+[m[32m</div>[m
[1mdiff --git a/common/mail/passwordResetToken-text.php b/common/mail/passwordResetToken-text.php[m
[1mnew file mode 100644[m
[1mindex 0000000..244c0cb[m
[1m--- /dev/null[m
[1m+++ b/common/mail/passwordResetToken-text.php[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32m/* @var $this yii\web\View */[m
[32m+[m[32m/* @var $user common\models\User */[m
[32m+[m
[32m+[m[32m$resetLink = Yii::$app->urlManager->createAbsoluteUrl(['site/reset-password', 'token' => $user->password_reset_token]);[m
[32m+[m[32m?>[m
[32m+[m[32mHello <?= $user->username ?>,[m
[32m+[m
[32m+[m[32mFollow the link below to reset your password:[m
[32m+[m
[32m+[m[32m<?= $resetLink ?>[m
[1mdiff --git a/common/models/LoginForm.php b/common/models/LoginForm.php[m
[1mnew file mode 100644[m
[1mindex 0000000..c4869d4[m
[1m--- /dev/null[m
[1m+++ b/common/models/LoginForm.php[m
[36m@@ -0,0 +1,78 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mnamespace common\models;[m
[32m+[m
[32m+[m[32muse Yii;[m
[32m+[m[32muse yii\base\Model;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Login form[m
[32m+[m[32m */[m
[32m+[m[32mclass LoginForm extends Model[m
[32m+[m[32m{[m
[32m+[m[32m    public $username;[m
[32m+[m[32m    public $password;[m
[32m+[m[32m    public $rememberMe = true;[m
[32m+[m
[32m+[m[32m    private $_user;[m
[32m+[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @inheritdoc[m
[32m+[m[32m     */[m
[32m+[m[32m    public function rules()[m
[32m+[m[32m    {[m
[32m+[m[32m        return [[m
[32m+[m[32m            // username and password are both required[m
[32m+[m[32m            [['username', 'password'], 'required'],[m
[32m+[m[32m            // rememberMe must be a boolean value[m
[32m+[m[32m            ['rememberMe', 'boolean'],[m
[32m+[m[32m            // password is validated by validatePassword()[m
[32m+[m[32m            ['password', 'validatePassword'],[m
[32m+[m[32m        ];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validates the password.[m
[32m+[m[32m     * This method serves as the inline validation for password.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string $attribute the attribute currently being validated[m
[32m+[m[32m     * @param array $params the additional name-value pairs given in the rule[m
[32m+[m[32m     */[m
[32m+[m[32m    public function validatePassword($attribute, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (!$this->hasErrors()) {[m
[32m+[m[32m            $user = $this->getUser();[m
[32m+[m[32m            if (!$user || !$user->validatePassword($this->password)) {[m
[32m+[m[32m                $this->addError($attribute, 'Incorrect username or password.');[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Logs in a user using the provided username and password.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return bool whether the user is logged in successfully[m
[32m+[m[32m     */[m
[32m+[m[32m    public function login()[m
[32m+[m[32m    {[m
[32m+[m[32m        if ($this->validate()) {[m
[32m+[m[32m            return Yii::$app->user->login($this->getUser(), $this->rememberMe ? 3600 * 24 * 30 : 0);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Finds user by [[username]][m
[32m+[m[32m     *[m
[32m+[m[32m     * @return User|null[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function getUser()[m
[32m+[m[32m    {[m
[32m+[m[32m        if ($this->_user === null) {[m
[32m+[m[32m            $this->_user = User::findByUsername($this->username);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return $this->_user;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/common/models/User.php b/common/models/User.php[m
[1mnew file mode 100644[m
[1mindex 0000000..2f4508f[m
[1m--- /dev/null[m
[1m+++ b/common/models/User.php[m
[36m@@ -0,0 +1,189 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mnamespace common\models;[m
[32m+[m
[32m+[m[32muse Yii;[m
[32m+[m[32muse yii\base\NotSupportedException;[m
[32m+[m[32muse yii\behaviors\TimestampBehavior;[m
[32m+[m[32muse yii\db\ActiveRecord;[m
[32m+[m[32muse yii\web\IdentityInterface;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * User model[m
[32m+[m[32m *[m
[32m+[m[32m * @property integer $id[m
[32m+[m[32m * @property string $username[m
[32m+[m[32m * @property string $password_hash[m
[32m+[m[32m * @property string $password_reset_token[m
[32m+[m[32m * @property string $email[m
[32m+[m[32m * @property string $auth_key[m
[32m+[m[32m * @property integer $status[m
[32m+[m[32m * @property integer $created_at[m
[32m+[m[32m * @property integer $updated_at[m
[32m+[m[32m * @property string $password write-only password[m
[32m+[m[32m */[m
[32m+[m[32mclass User extends ActiveRecord implements IdentityInterface[m
[32m+[m[32m{[m
[32m+[m[32m    const STATUS_DELETED = 0;[m
[32m+[m[32m    const STATUS_ACTIVE = 10;[m
[32m+[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @inheritdoc[m
[32m+[m[32m     */[m
[32m+[m[32m    public static function tableName()[m
[32m+[m[32m    {[m
[32m+[m[32m        return '{{%user}}';[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @inheritdoc[m
[32m+[m[32m     */[m
[32m+[m[32m    public function behaviors()[m
[32m+[m[32m    {[m
[32m+[m[32m        return [[m
[32m+[m[32m            TimestampBehavior::className(),[m
[32m+[m[32m        ];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @inheritdoc[m
[32m+[m[32m     */[m
[32m+[m[32m    public function rules()[m
[32m+[m[32m    {[m
[32m+[m[32m        return [[m
[32m+[m[32m            ['status', 'default', 'value' => self::STATUS_ACTIVE],[m
[32m+[m[32m            ['status', 'in', 'range' => [self::STATUS_ACTIVE, self::STATUS_DELETED]],[m
[32m+[m[32m        ];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @inheritdoc[m
[32m+[m[32m     */[m
[32m+[m[32m    public static function findIdentity($id)[m
[32m+[m[32m    {[m
[32m+[m[32m        return static::findOne(['id' => $id, 'status' => self::STATUS_ACTIVE]);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @inheritdoc[m
[32m+[m[32m     */[m
[32m+[m[32m    public static function findIdentityByAccessToken($token, $type = null)[m
[32m+[m[32m    {[m
[32m+[m[32m        throw new NotSupportedException('"findIdentityByAccessToken" is not implemented.');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Finds user by username[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string $username[m
[32m+[m[32m     * @return static|null[m
[32m+[m[32m     */[m
[32m+[m[32m    public static function findByUsername($username)[m
[32m+[m[32m    {[m
[32m+[m[32m        return static::findOne(['username' => $username, 'status' => self::STATUS_ACTIVE]);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Finds user by password reset token[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string $token password reset token[m
[32m+[m[32m     * @return static|null[m
[32m+[m[32m     */[m
[32m+[m[32m    public static function findByPasswordResetToken($token)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (!static::isPasswordResetTokenValid($token)) {[m
[32m+[m[32m            return null;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return static::findOne([[m
[32m+[m[32m            'password_reset_token' => $token,[m
[32m+[m[32m            'status' => self::STATUS_ACTIVE,[m
[32m+[m[32m        ]);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Finds out if password reset token is valid[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string $token password reset token[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    public static function isPasswordResetTokenValid($token)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (empty($token)) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $timestamp = (int) substr($token, strrpos($token, '_') + 1);[m
[32m+[m[32m        $expire = Yii::$app->params['user.passwordResetTokenExpire'];[m
[32m+[m[32m        return $timestamp + $expire >= time();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @inheritdoc[m
[32m+[m[32m     */[m
[32m+[m[32m    public function getId()[m
[32m+[m[32m    {[m
[32m+[m[32m        return $this->getPrimaryKey();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @inheritdoc[m
[32m+[m[32m     */[m
[32m+[m[32m    public function getAuthKey()[m
[32m+[m[32m    {[m
[32m+[m[32m        return $this->auth_key;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @inheritdoc[m
[32m+[m[32m     */[m
[32m+[m[32m    public function validateAuthKey($authKey)[m
[32m+[m[32m    {[m
[32m+[m[32m        return $this->getAuthKey() === $authKey;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validates password[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string $password password to validate[m
[32m+[m[32m     * @return bool if password provided is valid for current user[m
[32m+[m[32m     */[m
[32m+[m[32m    public function validatePassword($password)[m
[32m+[m[32m    {[m
[32m+[m[32m        return Yii::$app->security->validatePassword($password, $this->password_hash);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Generates password hash from password and sets it to the model[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string $password[m
[32m+[m[32m     */[m
[32m+[m[32m    public function setPassword($password)[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->password_hash = Yii::$app->security->generatePasswordHash($password);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Generates "remember me" authentication key[m
[32m+[m[32m     */[m
[32m+[m[32m    public function generateAuthKey()[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->auth_key = Yii::$app->security->generateRandomString();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Generates new password reset token[m
[32m+[m[32m     */[m
[32m+[m[32m    public function generatePasswordResetToken()[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->password_reset_token = Yii::$app->security->generateRandomString() . '_' . time();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Removes password reset token[m
[32m+[m[32m     */[m
[32m+[m[32m    public function removePasswordResetToken()[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->password_reset_token = null;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/common/tests/_bootstrap.php b/common/tests/_bootstrap.php[m
[1mnew file mode 100644[m
[1mindex 0000000..d5a93de[m
[1m--- /dev/null[m
[1m+++ b/common/tests/_bootstrap.php[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('YII_DEBUG') or define('YII_DEBUG', true);[m
[32m+[m[32mdefined('YII_ENV') or define('YII_ENV', 'test');[m
[32m+[m[32mdefined('YII_APP_BASE_PATH') or define('YII_APP_BASE_PATH', __DIR__.'/../../');[m
[32m+[m
[32m+[m[32mrequire_once(__DIR__ .  '/../../vendor/autoload.php');[m
[32m+[m[32mrequire_once(__DIR__ .  '/../../vendor/yiisoft/yii2/Yii.php');[m
[32m+[m[32mrequire(__DIR__ . '/../config/bootstrap.php');[m
[32m+[m
[1mdiff --git a/common/tests/_data/user.php b/common/tests/_data/user.php[m
[1mnew file mode 100644[m
[1mindex 0000000..9c9f50a[m
[1m--- /dev/null[m
[1m+++ b/common/tests/_data/user.php[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn [[m
[32m+[m[32m    [[m
[32m+[m[32m        'username' => 'bayer.hudson',[m
[32m+[m[32m        'auth_key' => 'HP187Mvq7Mmm3CTU80dLkGmni_FUH_lR',[m
[32m+[m[32m        //password_0[m
[32m+[m[32m        'password_hash' => '$2y$13$EjaPFBnZOQsHdGuHI.xvhuDp1fHpo8hKRSk6yshqa9c5EG8s3C3lO',[m
[32m+[m[32m        'password_reset_token' => 'ExzkCOaYc1L8IOBs4wdTGGbgNiG3Wz1I_1402312317',[m
[32m+[m[32m        'created_at' => '1402312317',[m
[32m+[m[32m        'updated_at' => '1402312317',[m
[32m+[m[32m        'email' => 'nicole.paucek@schultz.info',[m
[32m+[m[32m    ],[m
[32m+[m[32m];[m
[1mdiff --git a/common/tests/_output/.gitignore b/common/tests/_output/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..d6b7ef3[m
[1m--- /dev/null[m
[1m+++ b/common/tests/_output/.gitignore[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m*[m
[32m+[m[32m!.gitignore[m
[1mdiff --git a/common/tests/_support/.gitignore b/common/tests/_support/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..36e264c[m
[1m--- /dev/null[m
[1m+++ b/common/tests/_support/.gitignore[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m_generated[m
[1mdiff --git a/common/tests/_support/UnitTester.php b/common/tests/_support/UnitTester.php[m
[1mnew file mode 100644[m
[1mindex 0000000..91cb34f[m
[1m--- /dev/null[m
[1m+++ b/common/tests/_support/UnitTester.php[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mnamespace common\tests;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Inherited Methods[m
[32m+[m[32m * @method void wantToTest($text)[m
[32m+[m[32m * @method void wantTo($text)[m
[32m+[m[32m * @method void execute($callable)[m
[32m+[m[32m * @method void expectTo($prediction)[m
[32m+[m[32m * @method void expect($prediction)[m
[32m+[m[32m * @method void amGoingTo($argumentation)[m
[32m+[m[32m * @method void am($role)[m
[32m+[m[32m * @method void lookForwardTo($achieveValue)[m
[32m+[m[32m * @method void comment($description)[m
[32m+[m[32m * @method \Codeception\Lib\Friend haveFriend($name, $actorClass = NULL)[m
[32m+[m[32m *[m
[32m+[m[32m * @SuppressWarnings(PHPMD)[m
[32m+[m[32m */[m
[32m+[m[32mclass UnitTester extends \Codeception\Actor[m
[32m+[m[32m{[m
[32m+[m[32m    use _generated\UnitTesterActions;[m
[32m+[m[32m   /**[m
[32m+[m[32m    * Define custom actions here[m
[32m+[m[32m    */[m
[32m+[m[32m}[m
[1mdiff --git a/common/tests/unit.suite.yml b/common/tests/unit.suite.yml[m
[1mnew file mode 100644[m
[1mindex 0000000..19f0b42[m
[1m--- /dev/null[m
[1m+++ b/common/tests/unit.suite.yml[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mclass_name: UnitTester[m
[32m+[m[32mbootstrap: false[m
[32m+[m[32mmodules:[m
[32m+[m[32m    enabled:[m
[32m+[m[32m        - Yii2:[m
[32m+[m[32m            part: fixtures[m
[1mdiff --git a/common/tests/unit/models/LoginFormTest.php b/common/tests/unit/models/LoginFormTest.php[m
[1mnew file mode 100644[m
[1mindex 0000000..b83226f[m
[1m--- /dev/null[m
[1m+++ b/common/tests/unit/models/LoginFormTest.php[m
[36m@@ -0,0 +1,64 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace common\tests\unit\models;[m
[32m+[m
[32m+[m[32muse Yii;[m
[32m+[m[32muse common\models\LoginForm;[m
[32m+[m[32muse common\fixtures\User as UserFixture;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Login form test[m
[32m+[m[32m */[m
[32m+[m[32mclass LoginFormTest extends \Codeception\Test\Unit[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @var \frontend\tests\UnitTester[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $tester;[m
[32m+[m
[32m+[m
[32m+[m[32m    public function _before()[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->tester->haveFixtures([[m
[32m+[m[32m            'user' => [[m
[32m+[m[32m                'class' => UserFixture::className(),[m
[32m+[m[32m                'dataFile' => codecept_data_dir() . 'user.php'[m
[32m+[m[32m            ][m
[32m+[m[32m       